.left {
  text-align: left;
}

.center {
  text-align: center;
}

.right {
  text-align: right;
}

.pc-only {
  @include mq(sp) {
    display: none !important;
  }
}

.sp-only {
  @include mq(pc) {
    display: none !important;
  }
}

.full-link {
  display: block !important;
  width: 100%;
  height: 100%;
}

.hidden {
  display: none;
}

.attention {
  font-size: rempc(12);
  position: relative;
  width: fit-content;
  margin: 0 auto;
  color: $focus_font_color;
  font-weight: normal;

  @include mq(sp) {
    padding-left: vwsp(15);
  }
  
  &:before {
    content: "â€»";
    position: absolute;
    top: 0;
    
    @include mq(pc) {
      left: rempc(-15);
    }
    
    @include mq(sp) {
      left: 0;
    }
  }
}

.button {
  margin: 0 auto;
  position: relative;
  cursor: pointer;
  color: $button_font_color;
  text-align: center;
  font-weight: bold;
  letter-spacing: 0.05em;
  text-shadow: rgba(0,0,0,0.9) 0px 1px 2px;
  border: 1px solid $button_border_color;
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: rgba(255,255,255,0.25) 0px 1px 0px, 
              inset rgba(255,255,255,0.25) 0px 1px 0px, 
              inset rgba(0,0,0,0.25) 0px 0px 0px, 
              inset rgba(255,255,255,0.03) 0px 20px 0px, 
              inset rgba(0,0,0,0.15) 0px -20px 20px, 
              inset rgba(255,255,255,0.05) 0px 20px 20px;
  
  @include mq(pc) {
    padding: rempc(8) 0;
    font-size: rempc(18);
    border-radius: rempc(4);
  }
  
  @include mq(sp) {
    padding: vwsp(3) 0;
    font-size: vwsp(14);
    border-radius: vwsp(4);
  }
  
  a {
    color: $button_font_color;
  }
  
  &.shine-active {
    overflow: hidden;
    
    &:before {
      content: "";
      position: absolute;
      background: linear-gradient(to left, rgba(255,255,255,0) 0%, 
                                  rgba(255,255,255,0.9) 50%, rgba(255,255,255,0) 100%);
      top: -100%;
      height: 300%;
      box-shadow: rgba(255,255,255,0.1) 0px 1px 5px;
      transform: rotate(30deg);
      left: -20%;
      
      @include mq(pc) {
        width: rempc(24);
      }
      
      @include mq(sp) {
        width: vwsp(20);
      }
    }
    
    &.active {
      &:before {
        left: 110%;
        transition: all 0.6s ease-in-out;
      }
    }
  }
  
  &-link {
    padding: 0;
    
    .full-link {
      @include mq(pc) {
        padding: rempc(8) 0;
      }
      
      @include mq(sp) {
        padding: vwsp(3) 0;
      }
    }
  }
}

.form {
  input[type="text"],input[type="password"],input[type="email"],input[type="number"],select {
    width: 100%;
    outline: none;
    border: 1px solid $input_border_color;
    cursor: pointer;
    box-shadow: inset rgba(255,255,255,0.25) 0px 1px 0px, 
                inset rgba(0,0,0,0.25) 0px 0px 0px, 
                inset rgba(255,255,255,0.03) 0px 2px 0px, 
                inset rgba(0,0,0,0.15) 0px -2px 2px, 
                inset rgba(255,255,255,0.05) 0px 2px 2px;
    
    @include mq(pc) {
      font-size: rempc(14);
      padding: rempc(8) rempc(10);
      border-radius: rempc(4);
    }
    
    @include mq(sp) {
      font-size: vwsp(12);
      padding: vwsp(8) vwsp(10);
      border-radius: vwsp(3);
    }
    
    &.error {
      background: $input_error_back_color;
      border: 1px solid $input_error_border_color;
    }
  }
  
  .password-group {
    display: flex;
    justify-content: space-between;
    
    input[type="text"],input[type="password"] {
      width: 76%;
    }
  }
  
  .password-show {
    background-color: #f0f8ff;
    background-image: url("../../img/common/password-show.svg");
    background-position: center;
    background-repeat: no-repeat;
    width: 20%;
    position: relative;
    margin-right: 0;
    
    @include mq(pc) {
      background-size: rempc(25);
    }
    
    @include mq(sp) {
      background-size: vwsp(20);
    }
    
    &.active {
      &:before {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: linear-gradient(to left top, 
                                    transparent calc(50% - 1px), 
                                    rgb(194, 194, 194) calc(50% - 1px), 
                                    rgb(194, 194, 194) calc(50% + 1px), 
                                    transparent calc(50% + 1px));
        
        @include mq(pc) {
          width: rempc(25);
          height: rempc(25);
        }
        
        @include mq(sp) {
          width: vwsp(20);
          height: vwsp(20);
        }
      }
    }
  }

  &-checkbox {
    width: fit-content;
    
    &-check {
      display: inline-block;
      position: relative;
      background: $input_back_color;
      border: 1px solid $input_border_color;
      cursor: pointer;
      box-shadow: inset rgba(255,255,255,0.25) 0px 1px 0px, 
                  inset rgba(0,0,0,0.25) 0px 0px 0px, 
                  inset rgba(255,255,255,0.03) 0px 2px 0px, 
                  inset rgba(0,0,0,0.15) 0px -2px 2px, 
                  inset rgba(255,255,255,0.05) 0px 2px 2px;
      
      @include mq(pc) {
        width: 16px;
        height: 16px;
        margin-right: 6px;
        border-radius: 3px;
      }
      
      @include mq(sp) {
        width: vwsp(12);
        height: vwsp(12);
        margin-right: vwsp(5);
        border-radius: vwsp(3);
      }
      
      input[type="checkbox"] {
        display: none;
      }
      
      &.error {
        background: $input_error_back_color;
        border: 1px solid $input_error_border_color;
      }
      
      &.active {
        &:before {
          content: "";
          position: absolute;
          top: -23.25%;
          left: 60.25%;
          width: 20.125%;
          height: 125%;
          background: $input_font_color;
          transform: rotate(40deg);
        }
        
        &:after {
          content: "";
          position: absolute;
          width: 15.625%;
          height: 54.25%;
          top: 40.25%;
          left: 10.5%;
          background: $input_font_color;
          transform: rotate(-50deg);
        }
      }
    }
  }
  
  .required {
    color: red;
    font-weight: 500;
    
    @include mq(pc) {
      font-size: rempc(12);
      margin-left: rempc(5);
    }
    
    @include mq(sp) {
      font-size: vwsp(12);
      margin-left: vwsp(3);
    }
  }
  
  .warning {
    color: $input_error_font_color;
    display: none;
    width: 100%;
    user-select: text;
    
    @include mq(pc) {
      font-size: rempc(11);
      padding: rempc(5) rempc(12) 0;
    }
    
    @include mq(sp) {
      font-size: vwsp(10);
      padding: vwsp(5) vwsp(10) 0;
    }
  }
}

.float-description {
  display: none;
  position: absolute;
  z-index: 1;
  background: #000;
  color: #ffffff;
  pointer-events: none;
  white-space: nowrap;
  
  @include mq(pc) {
    font-size: rempc(10);
    line-height: rempc(14);
    padding: rempc(2) rempc(10);
    border-radius: rempc(3);
  }
  
  @include mq(sp) {
    font-size: vwsp(10);
    line-height: vwsp(14);
    padding: vwsp(2) vwsp(10);
    border-radius: vwsp(3);
  }
}
